using System.Collections.Generic;
using System.IO;
using SobekCM.Tools;

namespace SobekCM.Library.HTML
{
    /// <summary> Empty HTML subwriter writes a mostly empty page, using the web skin provided though,
    /// which allows external systems (like the builder) to be able to retrieve a web skin page </summary>
    public class Empty_HtmlSubwriter : abstractHtmlSubwriter
    {
        /// <summary> Constructor for a new instance of the <see cref="Empty_HtmlSubwriter"/> class </summary>
        /// <param name="RequestSpecificValues">All the necessary, non-global data specific to the current request</param>
        public Empty_HtmlSubwriter(RequestCache RequestSpecificValues) : base(RequestSpecificValues)
        {
            // Do nothing
        }

        /// <summary> Writes the HTML generated by this abstract html subwriter directly to the response stream </summary>
        /// <param name="Output"> Stream to which to write the HTML for this subwriter </param>
        /// <param name="Tracer"> Trace object keeps a list of each method executed and important milestones in rendering </param>
        /// <returns> Value indicating if html writer should finish the page immediately after this, or if there are other controls or routines which need to be called first </returns>
        public override bool Write_HTML(TextWriter Output, Custom_Tracer Tracer)
        {
            Output.WriteLine("<div id=\"empty\"></div>");
            return true;
        }

        /// <summary> Gets the collection of special behaviors which this subwriter
        /// requests from the main HTML writer. </summary>
        /// <remarks> By default, this returns an empty list </remarks>
        public override List<HtmlSubwriter_Behaviors_Enum> Subwriter_Behaviors
        {
            get
            {
                return new List<HtmlSubwriter_Behaviors_Enum> {HtmlSubwriter_Behaviors_Enum.Omit_Main_Navigation_Form, HtmlSubwriter_Behaviors_Enum.Omit_Main_PlaceHolder };
            }
        }
    }
}
